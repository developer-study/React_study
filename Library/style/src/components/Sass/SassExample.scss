@use 'Foundation/base';


.font {
    font: 100% base.$font-stack;
    color: base.$primary-color;
}

nav {
    ul {
        margin: 0;
        padding: 0;
        list-style: none;
    }

    li {
        display: inline-block;
    }

    a {
        display: block;
        padding: 6px 12px;
        text-decoration: none;
    }
}

.inverse {
    background-color: base.$primary-color;
    color: white;
}

@mixin theme($theme: DarkGray) {
    background: $theme;
    box-shadow: 0 0 1px rgba($theme, .25);
    color: #fff;
}

.info {
    @include theme;
}

.alert {
    @include theme($theme: DarkRed);
}

.success {
    @include theme($theme: DarkGreen);
}

@mixin avatar($size, $circle: false) {
    width: $size;
    height: $size;
    background-color: aqua;

    @if $circle {
        border-radius: $size / 2;
    }
}

.square-avatar {
    @include avatar(100px);
}

.circle-avatar {
    @include avatar(100px, $circle: true);
}

@function pow($base, $exponent) {
    $result: 1;
    @for $_ from 1 through $exponent {
        $result : $result * $base;
    }
    @return $result;
}

.sidebar {
    float: left;
    margin-left: pow(5, 3) * 1px;
}

@mixin reflexive-position($property, $value) {
    @if $property != left and $property != right {
        @error "Property #{property} must be either left or right.";
    }

    $left-value: if($property == right, initial, $value);
    $right-value: if($property == right, $value, initial);

    left: $left-value;
    right: $right-value;
    [dir="rtl"] & {
        left: $right-value;
        right: $left-value;
    }
}
.sidebar {
    @include reflexive-position(right, 12px);
}

@mixin prefix($property, $value, $prefixes) {
    @each $prefix in $prefixes {
        -#{$prefix}-#{$property}: $value;
    }
    #{$property}: $value;

}
.gray {
    @include prefix(filter, grayscale(50%), moz webkit o ms);
}
.button {
    @include prefix(background, linear-gradient(red, yellow), moz webkit o ms);
}

@mixin inline-animation($duration) {
    $name: inline-#{unique-id()};

    @keyframes #{$name} {
        @content;
    }

    animation-name: $name;
    animation-duration: $duration;
    animation-iteration-count: infinite;
}

.pulse {
    @include inline-animation(2s) {
        from {
            background-color: yellow;
        }
        to {
            background-color: red;
        }
    }
}